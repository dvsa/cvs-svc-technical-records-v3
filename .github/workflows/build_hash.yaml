name: Build hash and deploy to S3
run-name: "${{ github.actor }} - ${{ github.ref_name }} - ${{ github.run_id }} ðŸš€"

on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/CB2-10412'

jobs:
  Extract_Services:
    runs-on: ubuntu-latest
    outputs:
      services_list: ${{ steps.extract_services.outputs.SERVICES_LIST }}
    steps:
      - uses: actions/checkout@v4

      - name: extract services (YAML)
        id: extract_services
        run: |
          SERVICES_LIST=$(yq eval '.Resources | keys | .[] | select(. != "LocalQueue")' template.yml)
          echo -e "SERVICES_LIST: \n$SERVICES_LIST"
          echo "SERVICES_LIST=${SERVICES_LIST}" >> ${GITHUB_OUTPUT}

  Check:
    runs-on: ubuntu-latest
    needs: [Extract_Services]
    steps:
      - run: |
          echo -e "SERVICES_LIST: \n${{ needs.Extract_Services.outputs.services_list }}"

  Build_Hash:
    needs: [Extract_Services, Check]
    uses: dvsa/cvs-github-actions/.github/workflows/build-node-hash-monorepo.yaml@feature/CB2-10412
    with:
      services: ${{ needs.Extract_Services.outputs.services_list }}
    secrets:
      CVS_MGMT_AWS_ROLE: ${{ secrets.CVS_MGMT_AWS_ROLE }}
      DVSA_AWS_REGION: ${{ secrets.DVSA_AWS_REGION }}


#        "cvs-svc-technical-records-v3" : [
#          'ArchiveLambdaFunction',
#          'UnarchiveLambdaFunction',
#          'SearchLambdaFunction',
#          'GetLambdaFunction',
#          'PatchLambdaFunction',
#          'PostLambdaFunction',
#          'PromoteLambdaFunction',
#          'UpdateVrmFunction',
#          'GeneratePlateFunction',
#          'GenerateLetterFunction',
#          'SyncTestResultInfoFunction',
#          'UpdateVinFunction'
