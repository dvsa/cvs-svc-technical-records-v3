AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
    SearchLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: search.handler
        Runtime: nodejs18.x
        Events:
          SearchLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/search/{searchIdentifier}
              Method: get
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: false
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/search.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    GetLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: get.handler
        Runtime: nodejs18.x
        Events:
          GetLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/{systemNumber}/{createdTimestamp}
              Method: get
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          Target: "es2020"
          UseNpmCi: true
          Sourcemap: true
          EntryPoints:
            - src/handler/get.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    PostLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: post.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PostLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records
              Method: post
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          Target: "es2020"
          UseNpmCi: true
          Sourcemap: true
          EntryPoints:
            - src/handler/post.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    ArchiveLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: archive.handler
        Runtime: nodejs18.x
        Events:
          ArchiveLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/archive/{systemNumber}/{createdTimestamp}
              Method: patch
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          UseNpmCi: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/archive.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    UnarchiveLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: unarchive.handler
        Runtime: nodejs18.x
        Events:
          ArchiveLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/unarchive/{systemNumber}/{createdTimestamp}
              Method: post
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          UseNpmCi: true
          Minify: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/unarchive.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    PatchLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: update.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PatchLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/{systemNumber}/{createdTimestamp}
              Method: patch
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/update.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    PromoteLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: promote.handler
        Runtime: nodejs18.x
        Events:
          PromoteLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/promote/{systemNumber}/{createdTimestamp}
              Method: patch
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          UseNpmCi: true
          Minify: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/promote.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    UpdateVrmFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: updateVrm.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PatchLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/updateVrm/{systemNumber}/{createdTimestamp}
              Method: patch
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          Target: "es2020"
          UseNpmCi: true
          Sourcemap: true
          EntryPoints:
            - src/handler/updateVrm.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    UpdateVinFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: updateVin.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PatchLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/updateVin/{systemNumber}/{createdTimestamp}
              Method: patch
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          UseNpmCi: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/updateVin.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    GeneratePlateFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: plate.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PlateLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/plate/{systemNumber}/{createdTimestamp}
              Method: post
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          UseNpmCi: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/plate.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    GenerateLetterFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: letter.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          LetterLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/letter/{systemNumber}/{createdTimestamp}
              Method: post
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/letter.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    GenerateAdrCertificateFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: adrCertificate.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PlateLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/adrCertificate/{systemNumber}/{createdTimestamp}
              Method: post
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          UseNpmCi: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/adrCertificate.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    SyncTestResultInfoFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: sync-test-result-info.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          SQSEvent:
            Type: SQS
            Properties:
              Path: !GetAtt LocalQueue.Arn
              BatchSize: 10
      Metadata:
        BuildMethod: esbuild
        BuildProperties:
          Format: esm
          Minify: true
          UseNpmCi: true
          Target: "es2020"
          Sourcemap: true
          EntryPoints:
            - src/handler/sync-test-result-info.ts
          External: ['winston', 'dotenv']
          OutExtension:
            - .js=.mjs
    LocalQueue:
      Type: AWS::SQS::Queue
