AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
    SearchLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: search.handler
        Runtime: nodejs18.x
        Events:
          SearchLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/search/{searchIdentifier}
              Method: get
    GetLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: get.handler
        Runtime: nodejs18.x
        Events:
          GetLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/{systemNumber}/{createdTimestamp}
              Method: get
    PostLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: post.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PostLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records
              Method: post
    ArchiveLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: archive.handler
        Runtime: nodejs18.x
        Events:
          ArchiveLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/archive/{systemNumber}/{createdTimestamp}
              Method: patch
    UnarchiveLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: unarchive.handler
        Runtime: nodejs18.x
        Events:
          ArchiveLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/unarchive/{systemNumber}/{createdTimestamp}
              Method: post
    PatchLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: update.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PatchLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/{systemNumber}/{createdTimestamp}
              Method: patch
    PromoteLambdaFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: promote.handler
        Runtime: nodejs18.x
        Events:
          PromoteLambdaApi:
            Type: Api
            Properties:
              Path: /v3/technical-records/promote/{systemNumber}/{createdTimestamp}
              Method: patch
    UpdateVrmFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: updateVrm.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PatchLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/updateVrm/{systemNumber}/{createdTimestamp}
              Method: patch
    UpdateVinFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: updateVin.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PatchLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/updateVin/{systemNumber}/{createdTimestamp}
              Method: patch
    GeneratePlateFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: plate.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PlateLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/plate/{systemNumber}/{createdTimestamp}
              Method: post
    GenerateLetterFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: letter.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          LetterLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/letter/{systemNumber}/{createdTimestamp}
              Method: post

    GenerateAdrCertificateFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: adrCertificate.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          PlateLambda:
            Type: Api
            Properties:
              Path: /v3/technical-records/adrCertificate/{systemNumber}/{createdTimestamp}
              Method: post
    SyncTestResultInfoFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: sync-test-result-info.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          SQSEvent:
            Type: SQS
            Properties:
              Path: !GetAtt LocalQueue.Arn
              BatchSize: 10

    MotUpdateVrm:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: mot-update-vrm.handler
        Runtime: nodejs18.x
        Timeout: 20

    RemoveInvalidPrimaryVrms:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/hotfix/cb2-10791/
        Handler: removeInvalidPrimaryVrms.handler
        Runtime: nodejs18.x
        Timeout: 20

    BatchPlateCreation:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: batchPlateCreation.handler
        Runtime: nodejs18.x
        Timeout: 20

    UploadPlateSeed:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: uploadPlateSeedData.handler
        Runtime: nodejs18.x
        Timeout: 900
        MemorySize: 10240
        Events:
          PlateSeed:
            Type: Api
            Properties:
              Path: /v3/technical-records/uploadPlateSeed
              Method: get
                 
    LoadBatchPlate:
      Type: 'AWS::Serverless::Function'
      Properties:
        CodeUri: src/handler/
        Handler: loadBatchPlate.handler
        Runtime: nodejs18.x
        Timeout: 20
        Events:
          S3Event:
            Type: S3
            Events: s3:ObjectCreated:*
      Filter:
        S3Key:
          Rules:
            - Name: prefix
              Value: value

    LocalQueue:
      Type: AWS::SQS::Queue



