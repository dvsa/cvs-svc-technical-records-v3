AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Globals:
  Function:
    CodeUri: src/handler/
    Runtime: nodejs18.x
    Handler: app.handler
    Environment:
      Variables:
        NODE_ENV: development
        LOG_LEVEL: debug
        TABLE_NAME: local-flat-technical-records
        DYNAMO_ENDPOINT: http://localhost:8000
        DYNAMO_AWS_REGION: eu-west-1
        DOCKER_DYNAMO_ENDPOINT: http://local-dynamodb:8000
        DOCUMENT_GEN_SQS: queue-name
        POWERTOOLS_DEV: true
    Layers:
      - "arn:aws:lambda:eu-west-1:094274105915:layer:AWSLambdaPowertoolsTypeScript:28"

Resources:
  SearchLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Events:
        SearchLambdaApi:
          Type: Api
          Properties:
            Path: /v3/technical-records/search/{searchIdentifier}
            Method: get
      Environment:
        Variables:
          AWS_LAMBDA_FUNCTION_NAME: SearchLambdaFunction
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/search.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  GetLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Events:
        GetLambdaApi:
          Type: Api
          Properties:
            Path: /v3/technical-records/{systemNumber}/{createdTimestamp}
            Method: get
      Environment:
        Variables:
          AWS_LAMBDA_FUNCTION_NAME: GetLambdaFunction
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/get.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  PostLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        PostLambdaApi:
          Type: Api
          Properties:
            Path: /v3/technical-records
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/post.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  ArchiveLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Events:
        ArchiveLambdaApi:
          Type: Api
          Properties:
            Path: /v3/technical-records/archive/{systemNumber}/{createdTimestamp}
            Method: patch
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/archive.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  UnarchiveLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Events:
        ArchiveLambdaApi:
          Type: Api
          Properties:
            Path: /v3/technical-records/unarchive/{systemNumber}/{createdTimestamp}
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/unarchive.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  PatchLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        PatchLambda:
          Type: Api
          Properties:
            Path: /v3/technical-records/{systemNumber}/{createdTimestamp}
            Method: patch
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/update.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  PromoteLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Events:
        PromoteLambdaApi:
          Type: Api
          Properties:
            Path: /v3/technical-records/promote/{systemNumber}/{createdTimestamp}
            Method: patch
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/promote.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  UpdateVrmFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        PatchLambda:
          Type: Api
          Properties:
            Path: /v3/technical-records/updateVrm/{systemNumber}/{createdTimestamp}
            Method: patch
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/updateVrm.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  UpdateVinFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        PatchLambda:
          Type: Api
          Properties:
            Path: /v3/technical-records/updateVin/{systemNumber}/{createdTimestamp}
            Method: patch
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/updateVin.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  GeneratePlateFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        PlateLambda:
          Type: Api
          Properties:
            Path: /v3/technical-records/plate/{systemNumber}/{createdTimestamp}
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/plate.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  GenerateLetterFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        LetterLambda:
          Type: Api
          Properties:
            Path: /v3/technical-records/letter/{systemNumber}/{createdTimestamp}
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/letter.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  GenerateAdrCertificateFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        PlateLambda:
          Type: Api
          Properties:
            Path: /v3/technical-records/adrCertificate/{systemNumber}/{createdTimestamp}
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/adrCertificate.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']

  SyncTestResultInfoFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Timeout: 20
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Path: !GetAtt LocalQueue.Arn
            BatchSize: 10
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints:
          - src/handler/sync-test-result-info.ts
        External: ['@aws-sdk', '@aws-lambda-powertools/logger']
  LocalQueue:
    Type: AWS::SQS::Queue
